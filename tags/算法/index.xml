<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Cassie</title>
    <link>https://cassiestd.github.io/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Cassie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Sun, 13 Jan 2019 23:30:58 +0530</lastBuildDate>
    
	<atom:link href="https://cassiestd.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java算法与数据结构-01</title>
      <link>https://cassiestd.github.io/posts/%E7%AE%97%E6%B3%95/algorithm01/</link>
      <pubDate>Sun, 13 Jan 2019 23:30:58 +0530</pubDate>
      
      <guid>https://cassiestd.github.io/posts/%E7%AE%97%E6%B3%95/algorithm01/</guid>
      <description> 01 经典算法面试题 1、字符串匹配问题：  1) KMP算法
2) 暴力匹配
 2、汉诺塔游戏：  1) 分治算法
 3、8皇后问题：  1) 回溯算法
2) 分治算法
 4、马踏棋盘：  1) 图的深度优先遍历算法（DFS）+贪心算法优化
 02 线型结构和非线性结构 1、线形结构： 数据元素1to1，有两种存储结构【顺序存储结构：顺序表中的存储元素是连续的】和【链式存储结构：链表中的存储元素不一定是连续的，元素结点=数据元素+相邻元素地址信息】。线性结构常见的有：数组、队列、链表、栈等。注意：前驱元素和后继元素的概念。
2、非线性结构： 数据元素1toN或者NtoN，常见的非线性结构有：二维数组，多维数组，广义表，树结构，图结构等。
03 稀疏数组和队列 ###03.1 稀疏数组
1、基本介绍（稀疏数组运用前提）： 当一个数组中大部分元素为0或同一个值时，可以用稀疏数组来保存该数组。
2、稀疏数组的处理方法：  1)记录数组有几行几列，几个不同的值。
2)把具有不同值的元素的行列及值记录在一个小规模数组中，从而缩小程序的规模。
 3、稀疏数组的应用： #####（1）二维数组 转 稀疏数组 的思路： &amp;gt;1)遍历原始的二维数组，得到有效数据的个数sum。 &amp;gt; &amp;gt;2)根据sum可以创建稀疏数组sparseArr int[sum+1][3]. &amp;gt; &amp;gt;3)将二维数组的有效数据存入到稀疏数组中（稀疏数组第一行存放行数、列数、不同值的元素个数）。 &amp;gt; &amp;gt;4)将稀疏数组存盘到文件中。 #####（2）稀疏数组 转 二维数组 的思路： &amp;gt;1)从文件中读取稀疏数组。 &amp;gt; &amp;gt;2）先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组。 &amp;gt; &amp;gt;3）依次读取稀疏数组后几行的数据，并赋给原始二维数组。 4、稀疏数组的代码实现： </description>
    </item>
    
  </channel>
</rss>